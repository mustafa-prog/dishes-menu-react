{"version":3,"sources":["components/Loading.js","shared/baseUrl.js","components/Home.js","components/About.js","components/Menu.js","components/Contact.js","components/DishDetail.js","components/Header.js","components/Footer.js","components/Main.js","redux/ActionCreators.js","redux/ActionTypes.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/configureStore.js","redux/forms.js","App.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderLeader","tag","left","middle","object","body","heading","About","leaders","map","key","id","to","active","title","list","RenderMenuItem","width","Menu","menu","dishes","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","postFeedback","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","type","size","offset","check","checkbox","select","textarea","rows","color","Component","CommentForm","console","log","toggleModal","postComment","dishId","rating","author","comment","setState","isModalOpen","state","Fragment","outline","onClick","this","isOpen","toggle","style","margin","value","RenderDish","RenderComments","comments","cmnts","Intl","DateTimeFormat","year","month","day","format","Date","date","DishDetail","Header","toggleNav","isNavOpen","handleLogin","e","preventDefault","alert","username","password","remember","checked","dark","expand","height","navbar","innerRef","input","Footer","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","path","component","filter","featured","promotions","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","fetch","then","response","ok","error","Error","status","statusText","message","json","payload","addDishes","catch","addComments","promos","addPromos","addLeaders","actions","reset","newComment","toISOString","method","JSON","stringify","headers","credentials","addComment","feedback","newFeedback","initialState","rootReducer","combineReducers","action","createForms","firstname","lastname","telnum","email","agree","contactType","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","App","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yOAWeA,EATC,WACd,OACE,yBAAKC,UAAU,UACb,0BAAMA,UAAU,oDAChB,8CCNOC,EAAU,yBCcjBC,EAAa,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAErC,OAAID,EACK,kBAAC,EAAD,MACEC,EACF,4BAAKA,GAGV,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAASC,IAAKL,EAAUE,EAAKI,MAAOC,IAAKL,EAAKM,OAC9C,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAYN,EAAKM,MAChBN,EAAKO,YACJ,kBAAC,IAAD,KAAeP,EAAKO,aAClB,KACJ,kBAAC,IAAD,KAAWP,EAAKQ,gBAoCXC,EA9BF,SAACC,GACZ,OACE,yBAAKb,UAAU,aACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,CACEG,KAAMU,EAAMC,KACZV,UAAWS,EAAME,cACjBV,QAASQ,EAAMG,iBAGnB,yBAAKhB,UAAU,qBACb,kBAAC,EAAD,CACEG,KAAMU,EAAMI,UACZb,UAAWS,EAAMK,cACjBb,QAASQ,EAAMM,iBAGnB,yBAAKnB,UAAU,qBACb,kBAAC,EAAD,CACEG,KAAMU,EAAMO,OACZhB,UAAWS,EAAMQ,eACjBhB,QAASQ,EAAMS,qB,OC7CrBC,EAAe,SAACV,GACpB,OACE,yBAAKb,UAAU,eACb,kBAAC,IAAD,CAAOwB,IAAI,MACT,kBAAC,IAAD,CAAOC,MAAI,EAACC,QAAM,GAChB,kBAAC,IAAD,CACEC,QAAM,EACNrB,IAAKL,EAAUY,EAAMO,OAAOb,MAC5BC,IAAKK,EAAMO,OAAOX,QAGtB,kBAAC,IAAD,CAAOmB,MAAI,EAAC5B,UAAU,QACpB,kBAAC,IAAD,CAAO6B,SAAO,GAAEhB,EAAMO,OAAOX,MAC7B,2BAAII,EAAMO,OAAOV,aACjB,2BAAIG,EAAMO,OAAOT,iBAiHZmB,MA1Gf,SAAejB,GACb,IAAMkB,EAAUlB,EAAMkB,QAAQA,QAAQC,KAAI,SAACZ,GACzC,OAAO,kBAAC,EAAD,CAAca,IAAKb,EAAOc,GAAId,OAAQA,OAG/C,OAAIP,EAAMkB,QAAQ3B,UAEd,yBAAKJ,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,QAIGa,EAAMkB,QAAQ1B,QAErB,yBAAKL,UAAU,aACb,yBAAKA,UAAU,OACb,4BAAKa,EAAMkB,QAAQ1B,WAMvB,yBAAKL,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMmC,GAAG,SAAT,SAEF,kBAAC,IAAD,CAAgBC,QAAM,GAAtB,aAEF,yBAAKpC,UAAU,UACb,wCACA,+BAGJ,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,mBACb,2CACA,uaAQA,4EACiD,IAC/C,8CAFF,iIAOF,yBAAKA,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYA,UAAU,yBAAtB,qBAGA,kBAAC,IAAD,KACE,wBAAIA,UAAU,WACZ,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKR,yBAAKA,UAAU,UACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUA,UAAU,YAClB,gCAAYA,UAAU,cACpB,uBAAGA,UAAU,QAAb,qFAIA,4BAAQA,UAAU,qBAAlB,cAEE,0BAAMqC,MAAM,gBAAZ,0EAUZ,yBAAKrC,UAAU,mBACb,yBAAKA,UAAU,UACb,qDAEF,yBAAKA,UAAU,UACb,kBAAC,IAAD,CAAOsC,MAAI,GAAEP,OCtHzB,SAASQ,EAAT,GAAmC,IAATzB,EAAQ,EAARA,KACxB,OACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAMqB,GAAE,gBAAWrB,EAAKoB,KAEtB,kBAAC,IAAD,CAASM,MAAM,OAAOlC,IAAKL,EAAUa,EAAKP,MAAOC,IAAKM,EAAKL,OAC3D,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAYK,EAAKL,SAO3B,IA6CegC,EA7CF,SAAC5B,GACZ,IAAM6B,EAAO7B,EAAM8B,OAAOA,OAAOX,KAAI,SAAClB,GACpC,OACE,yBAAKmB,IAAKnB,EAAKoB,GAAIlC,UAAU,uBAC3B,kBAACuC,EAAD,CAAgBzB,KAAMA,QAK5B,OAAID,EAAM8B,OAAOvC,UAEb,yBAAKJ,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,QAIGa,EAAM8B,OAAOtC,QAEpB,yBAAKL,UAAU,aACb,yBAAKA,UAAU,OACb,4BAAKa,EAAM8B,OAAOtC,WAMtB,yBAAKL,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMmC,GAAG,SAAT,UAEF,kBAAC,IAAD,CAAgBC,QAAM,GAAtB,SAEF,yBAAKpC,UAAU,UACb,oCACA,+BAGJ,yBAAKA,UAAU,OAAO0C,K,OCvDxBE,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAUA,GAAOA,EAAIC,QAAUE,IACpDC,EAAY,SAACD,GAAD,OAAS,SAACH,GAAD,OAASA,GAAOA,EAAIC,QAAUE,IACnDE,EAAW,SAACL,GAAD,OAAUM,MAAMC,OAAOP,KAClCQ,EAAa,SAACR,GAAD,MACjB,4CAA4CS,KAAKT,IA4PpCU,E,4MAzPbC,aAAe,SAACC,GAEd,EAAK5C,MAAM6C,aAAaD,GAExB,EAAK5C,MAAM8C,qB,uDAEH,IAAD,OACP,OACE,yBAAK3D,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMmC,GAAG,SAAT,UAEF,kBAAC,IAAD,CAAgBC,QAAM,GAAtB,eAEF,yBAAKpC,UAAU,UACb,0CACA,+BAGJ,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,UACb,qDAEF,yBAAKA,UAAU,+BACb,2CACA,6DAEE,6BAFF,2BAIE,6BAJF,YAME,6BACA,uBAAGA,UAAU,gBAPf,oBAQE,6BACA,uBAAGA,UAAU,cATf,oBAUE,6BACA,uBAAGA,UAAU,mBAXf,KAWuC,IACrC,uBAAG4D,KAAK,6BAAR,wBAGJ,yBAAK5D,UAAU,+BACb,oDAEF,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,YAAY6D,KAAK,SAC9B,uBACEA,KAAK,SACL7D,UAAU,kBACV4D,KAAK,oBAEL,uBAAG5D,UAAU,gBALf,SAOA,uBAAG6D,KAAK,SAAS7D,UAAU,eAAe4D,KAAK,oBAC7C,uBAAG5D,UAAU,gBADf,UAGA,uBACE6D,KAAK,SACL7D,UAAU,kBACV4D,KAAK,6BAEL,uBAAG5D,UAAU,qBALf,aAUN,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,UACb,sDAEF,yBAAKA,UAAU,mBACb,kBAAC,OAAD,CACE8D,MAAM,WACNC,SAAU,SAACN,GAAD,OAAY,EAAKD,aAAaC,KAExC,kBAAC,IAAD,CAAKzD,UAAU,cACb,kBAAC,IAAD,CAAOgE,QAAQ,YAAYC,GAAI,GAA/B,cAGA,kBAAC,IAAD,CAAKA,GAAI,IACP,kBAAC,UAAQC,KAAT,CACEJ,MAAM,aACN5B,GAAG,YACHzB,KAAK,YACL0D,YAAY,aACZnE,UAAU,eACVoE,WAAY,CACVxB,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,OAGzB,kBAAC,SAAD,CACE/C,UAAU,cACV8D,MAAM,aACNO,KAAK,UACLC,SAAU,CACR1B,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAKnB,kBAAC,IAAD,CAAK/C,UAAU,cACb,kBAAC,IAAD,CAAOgE,QAAQ,WAAWC,GAAI,GAA9B,aAGA,kBAAC,IAAD,CAAKA,GAAI,IACP,kBAAC,UAAQC,KAAT,CACEJ,MAAM,YACN5B,GAAG,WACHzB,KAAK,WACL0D,YAAY,YACZnE,UAAU,eACVoE,WAAY,CACVxB,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,OAGzB,kBAAC,SAAD,CACE/C,UAAU,cACV8D,MAAM,YACNO,KAAK,UACLC,SAAU,CACR1B,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAKnB,kBAAC,IAAD,CAAK/C,UAAU,cACb,kBAAC,IAAD,CAAOgE,QAAQ,SAASC,GAAI,GAA5B,gBAGA,kBAAC,IAAD,CAAKA,GAAI,IACP,kBAAC,UAAQC,KAAT,CACEJ,MAAM,UACN5B,GAAG,SACHzB,KAAK,SACL0D,YAAY,cACZnE,UAAU,eACVoE,WAAY,CACVxB,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,IACrBG,cAGJ,kBAAC,SAAD,CACElD,UAAU,cACV8D,MAAM,UACNO,KAAK,UACLC,SAAU,CACR1B,SAAU,WACVK,UAAW,iCACXF,UAAW,6BACXG,SAAU,wBAKlB,kBAAC,IAAD,CAAKlD,UAAU,cACb,kBAAC,IAAD,CAAOgE,QAAQ,QAAQC,GAAI,GAA3B,SAGA,kBAAC,IAAD,CAAKA,GAAI,IACP,kBAAC,UAAQC,KAAT,CACEJ,MAAM,SACNS,KAAK,QACLrC,GAAG,QACHzB,KAAK,QACL0D,YAAY,QACZnE,UAAU,eACVoE,WAAY,CACVxB,WACAS,gBAGJ,kBAAC,SAAD,CACErD,UAAU,cACV8D,MAAM,SACNO,KAAK,UACLC,SAAU,CACR1B,SAAU,WACVS,WAAY,6BAKpB,kBAAC,IAAD,CAAKrD,UAAU,cACb,kBAAC,IAAD,CAAKiE,GAAI,CAAEO,KAAM,EAAGC,OAAQ,IAC1B,yBAAKzE,UAAU,cACb,kBAAC,IAAD,CAAO0E,OAAK,GACV,kBAAC,UAAQC,SAAT,CACEb,MAAM,SACNS,KAAK,WACL9D,KAAK,QACLT,UAAU,qBACT,IACH,0DAIN,kBAAC,IAAD,CAAKiE,GAAI,CAAEO,KAAM,EAAGC,OAAQ,IAC1B,kBAAC,UAAQG,OAAT,CACEd,MAAM,eACNS,KAAK,SACL9D,KAAK,cACLT,UAAU,gBAEV,wCACA,4CAIN,kBAAC,IAAD,CAAKA,UAAU,cACb,kBAAC,IAAD,CAAOgE,QAAQ,UAAUC,GAAI,GAA7B,iBAGA,kBAAC,IAAD,CAAKA,GAAI,IACP,kBAAC,UAAQY,SAAT,CACEf,MAAM,WACNS,KAAK,WACLrC,GAAG,UACHzB,KAAK,UACLqE,KAAK,KACL9E,UAAU,mBAIhB,kBAAC,IAAD,CAAKA,UAAU,cACb,kBAAC,IAAD,CAAKiE,GAAI,CAAEO,KAAM,GAAIC,OAAQ,IAC3B,kBAAC,IAAD,CAAQF,KAAK,SAASQ,MAAM,WAA5B,2B,GA7OIC,aCChBpC,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAUA,GAAOA,EAAIC,QAAUE,IAIpDiC,E,kDACJ,WAAYpE,GAAQ,IAAD,8BACjB,cAAMA,IAIR2C,aAAe,SAACC,GACdyB,QAAQC,IAAI1B,GACZ,EAAK2B,cAEL,EAAKvE,MAAMwE,YACT,EAAKxE,MAAMyE,OACX7B,EAAO8B,OACP9B,EAAO+B,OACP/B,EAAOgC,UAbQ,EAkBnBL,YAAc,WACZ,EAAKM,SAAS,CAAEC,aAAc,EAAKC,MAAMD,eAjBzC,EAAKC,MAAQ,CAAED,aAAa,GAFX,E,qDAsBT,IA1BO3C,EA0BR,OACP,OACE,kBAAC,IAAM6C,SAAP,KACE,kBAAC,IAAD,CAAQC,SAAO,EAACC,QAASC,KAAKZ,aAC5B,0BAAMpF,UAAU,sBAAhB,oBAEF,kBAAC,IAAD,CAAOiG,OAAQD,KAAKJ,MAAMD,YAAaO,OAAQF,KAAKZ,aAClD,kBAAC,IAAD,CAAac,OAAQF,KAAKZ,aAA1B,kBACA,kBAAC,IAAD,CAAWe,MAAO,CAAEC,OAAQ,KAC1B,kBAAC,YAAD,CAAWrC,SAAU,SAACN,GAAD,OAAY,EAAKD,aAAaC,KACjD,kBAAC,IAAD,CAAKzD,UAAU,cACb,kBAAC,IAAD,CAAOgE,QAAQ,UAAf,UACA,kBAAC,UAAQY,OAAT,CACEd,MAAM,UACNS,KAAK,SACL9D,KAAK,SACLT,UAAU,gBAEV,qCACA,qCACA,qCACA,qCACA,uCAIJ,kBAAC,IAAD,CAAKA,UAAU,cACb,kBAAC,IAAD,CAAOgE,QAAQ,UAAf,aACA,kBAAC,UAAQE,KAAT,CACEJ,MAAM,UACN5B,GAAG,SACHzB,KAAK,SACL0D,YAAY,YACZnE,UAAU,eACVoE,WAAY,CACVxB,WACAK,WA9DDD,EA8DsB,EA9Dd,SAACH,GAAD,OAASA,GAAOA,EAAIC,QAAUE,IA+DrCD,UAAWA,EAAU,OAGzB,kBAAC,SAAD,CACE/C,UAAU,cACV8D,MAAM,UACNO,KAAK,UACLC,SAAU,CACR1B,SAAU,WACVK,UAAW,oCACXF,UAAW,oCAKjB,kBAAC,IAAD,CAAK/C,UAAU,cACb,kBAAC,IAAD,CAAOgE,QAAQ,WAAf,WACA,kBAAC,UAAQa,SAAT,CACEf,MAAM,WACNS,KAAK,WACLrC,GAAG,UACHzB,KAAK,UACLqE,KAAK,IACL9E,UAAU,kBAGd,kBAAC,IAAD,CAAQuE,KAAK,SAAS8B,MAAM,SAAStB,MAAM,WAA3C,kB,GAtFYC,aAiG1B,SAASsB,EAAT,GAA+B,IAATxF,EAAQ,EAARA,KACpB,OAAY,MAARA,EAEA,yBAAKd,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASwC,MAAM,OAAOlC,IAAKL,EAAUa,EAAKP,MAAOC,IAAKM,EAAKL,OAC3D,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAYK,EAAKL,MACjB,kBAAC,IAAD,KAAWK,EAAKH,gBAMjB,8BAIX,SAAS4F,EAAT,GAA4D,IAAlCC,EAAiC,EAAjCA,SAAUnB,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OAC/C,GAAgB,MAAZkB,EACF,OAAO,8BAET,IAAMC,EAAQD,EAASxE,KAAI,SAACyD,GAC1B,OACE,wBAAIxD,IAAKwD,EAAQvD,IACf,2BAAIuD,EAAQA,SACZ,iCACMA,EAAQD,OADd,SAEG,IAAIkB,KAAKC,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,OACPC,IAAK,YACJC,OAAO,IAAIC,KAAKvB,EAAQwB,YAKnC,OACE,yBAAKjH,UAAU,uBACb,0CACA,wBAAIA,UAAU,iBAAiByG,GAC/B,kBAAC,EAAD,CAAanB,OAAQA,EAAQD,YAAaA,KAKhD,IAgDe6B,EAhDI,SAACrG,GAClB,OAAIA,EAAMT,UAEN,yBAAKJ,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,QAIGa,EAAMR,QAEb,yBAAKL,UAAU,aACb,yBAAKA,UAAU,OACb,4BAAKa,EAAMR,WAIM,MAAdQ,EAAMC,KAEb,yBAAKd,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMmC,GAAG,SAAT,UAEF,kBAAC,IAAD,CAAgBC,QAAM,GAAEvB,EAAMC,KAAKL,OAErC,yBAAKT,UAAU,UACb,4BAAKa,EAAMC,KAAKL,MAChB,+BAGJ,yBAAKT,UAAU,OACb,kBAACsG,EAAD,CAAYxF,KAAMD,EAAMC,OACxB,kBAACyF,EAAD,CACEC,SAAU3F,EAAM2F,SAEhBnB,YAAaxE,EAAMwE,YACnBC,OAAQzE,EAAMC,KAAKoB,OAMpB,+BCxDIiF,E,kDAzIb,WAAYtG,GAAQ,IAAD,8BACjB,cAAMA,IAQRuG,UAAY,WACV,EAAK1B,SAAS,CAAE2B,WAAY,EAAKzB,MAAMyB,aAVtB,EAanBjC,YAAc,WACZ,EAAKM,SAAS,CAAEC,aAAc,EAAKC,MAAMD,eAdxB,EAiBnB2B,YAAc,SAACC,GACbA,EAAEC,iBACF,EAAKpC,cACLqC,MAAM,aAAD,OACU,EAAKC,SAASrB,MADxB,sBAC2C,EAAKsB,SAAStB,MADzD,sBAC4E,EAAKuB,SAASC,WAlB/F,EAAKjC,MAAQ,CACXyB,WAAW,EACX1B,aAAa,GALE,E,qDAyBT,IAAD,OACP,OACE,kBAAC,IAAME,SAAP,KAEE,kBAAC,IAAD,CAAQiC,MAAI,EAACC,OAAO,MAClB,yBAAK/H,UAAU,aAEb,kBAAC,IAAD,CAAe+F,QAASC,KAAKoB,YAC7B,kBAAC,IAAD,CAAapH,UAAU,UAAU4D,KAAK,KACpC,yBAEEtD,IAAI,yBACJ0H,OAAO,KACPxF,MAAM,KACNhC,IAAI,2BAIR,kBAAC,IAAD,CAAUyF,OAAQD,KAAKJ,MAAMyB,UAAWY,QAAM,GAC5C,kBAAC,IAAD,CAAKA,QAAM,GACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASjI,UAAU,WAAWmC,GAAG,SAC/B,0BAAMnC,UAAU,oBAAhB,WAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,UAAU,WAAWmC,GAAG,YAC/B,0BAAMnC,UAAU,oBAAhB,eAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,UAAU,WAAWmC,GAAG,SAC/B,0BAAMnC,UAAU,oBAAhB,WAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,UAAU,WAAWmC,GAAG,cAC/B,0BAAMnC,UAAU,4BACb,IADH,iBAON,kBAAC,IAAD,CAAKA,UAAU,UAAUiI,QAAM,GAC7B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQnC,SAAO,EAACC,QAASC,KAAKZ,aAC5B,0BAAMpF,UAAU,wBADlB,eAQV,kBAAC,IAAD,KACE,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,mBACb,qDACA,yLASR,kBAAC,IAAD,CAAOiG,OAAQD,KAAKJ,MAAMD,YAAaO,OAAQF,KAAKZ,aAClD,kBAAC,IAAD,CAAac,OAAQF,KAAKZ,aAA1B,SACA,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAMrB,SAAUiC,KAAKsB,aACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOtD,QAAQ,YAAf,YACA,kBAAC,IAAD,CACEO,KAAK,OACLrC,GAAG,WACHzB,KAAK,WACLyH,SAAU,SAACC,GAAD,OAAY,EAAKT,SAAWS,MAG1C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOnE,QAAQ,YAAf,YACA,kBAAC,IAAD,CACEO,KAAK,WACLrC,GAAG,WACHzB,KAAK,WACLyH,SAAU,SAACC,GAAD,OAAY,EAAKR,SAAWQ,MAG1C,kBAAC,IAAD,CAAWzD,OAAK,GACd,kBAAC,IAAD,CAAOA,OAAK,GACV,kBAAC,IAAD,CACEH,KAAK,WACL9D,KAAK,WACLyH,SAAU,SAACC,GAAD,OAAY,EAAKP,SAAWO,KACrC,IALL,gBASF,kBAAC,IAAD,CAAQ5D,KAAK,SAAS8B,MAAM,SAAStB,MAAM,WAA3C,iB,GA/HOC,aCsENoD,EAvFA,SAACvH,GACd,OACE,yBAAKb,UAAU,UACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,2BACb,qCACA,wBAAIA,UAAU,iBACZ,4BACE,kBAAC,IAAD,CAAMmC,GAAG,SAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,SAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,cAAT,iBAIN,yBAAKnC,UAAU,kBACb,2CACA,6DAEE,6BAFF,2BAIE,6BAJF,YAME,6BACA,uBAAGA,UAAU,sBAPf,mBAQE,6BACA,uBAAGA,UAAU,oBATf,mBAUE,6BACA,uBAAGA,UAAU,yBAXf,IAW4C,IAC1C,uBAAG4D,KAAK,6BAAR,wBAGJ,yBAAK5D,UAAU,0CACb,yBAAKA,UAAU,eACb,uBACEA,UAAU,sCACV4D,KAAK,uBAEL,uBAAG5D,UAAU,uBAEf,uBACEA,UAAU,wCACV4D,KAAK,2CAEL,uBAAG5D,UAAU,oBAEf,uBACEA,UAAU,wCACV4D,KAAK,+BAEL,uBAAG5D,UAAU,oBAEf,uBACEA,UAAU,uCACV4D,KAAK,uBAEL,uBAAG5D,UAAU,mBAEf,uBACEA,UAAU,sCACV4D,KAAK,uBAEL,uBAAG5D,UAAU,mBAEf,uBAAGA,UAAU,2BAA2B4D,KAAK,WAC3C,uBAAG5D,UAAU,yBAKrB,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,iBACb,6E,eC9DNqI,E,kLAGFrC,KAAKnF,MAAMyH,cACXtC,KAAKnF,MAAM0H,gBACXvC,KAAKnF,MAAM2H,cACXxC,KAAKnF,MAAM4H,iB,+BAGH,IAAD,OA6CP,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAhDT,WACf,OACE,kBAAC,EAAD,CAEE5H,cAAe,EAAKF,MAAM8B,OAAOvC,UACjCY,cAAe,EAAKH,MAAM8B,OAAOtC,QACjCS,KAAM,EAAKD,MAAM8B,OAAOA,OAAOiG,QAAO,SAAC9H,GAAD,OAAUA,EAAK+H,YAAU,GAE/D3H,cAAe,EAAKL,MAAMiI,WAAW1I,UACrCe,cAAe,EAAKN,MAAMiI,WAAWzI,QACrCY,UACE,EAAKJ,MAAMiI,WAAWA,WAAWF,QAC/B,SAAC3H,GAAD,OAAeA,EAAU4H,YACzB,GAGJxH,eAAgB,EAAKR,MAAMkB,QAAQ3B,UACnCkB,eAAgB,EAAKT,MAAMkB,QAAQ1B,QACnCe,OACE,EAAKP,MAAMkB,QAAQA,QAAQ6G,QAAO,SAACxH,GAAD,OAAYA,EAAOyH,YAAU,QA8BjE,kBAAC,IAAD,CACEH,KAAK,WACLC,UAAW,kBAAM,kBAAC,EAAD,CAAO5G,QAAS,EAAKlB,MAAMkB,aAE9C,kBAAC,IAAD,CACEgH,OAAK,EACLL,KAAK,QACLC,UAAW,kBAAM,kBAAC,EAAD,CAAMhG,OAAQ,EAAK9B,MAAM8B,YAG5C,kBAAC,IAAD,CAAO+F,KAAK,gBAAgBC,UAlCf,SAAC,GAAe,IAAbK,EAAY,EAAZA,MACpB,OACE,kBAAC,EAAD,CACElI,KACE,EAAKD,MAAM8B,OAAOA,OAAOiG,QACvB,SAAC9H,GAAD,OAAUA,EAAKoB,KAAO+G,SAASD,EAAME,OAAO5D,OAAQ,OACpD,GAEJlF,UAAW,EAAKS,MAAM8B,OAAOvC,UAC7BC,QAAS,EAAKQ,MAAM8B,OAAOtC,QAC3BmG,SAAU,EAAK3F,MAAM2F,SAASA,SAASoC,QACrC,SAACnD,GAAD,OAAaA,EAAQH,SAAW2D,SAASD,EAAME,OAAO5D,OAAQ,OAEhE6D,gBAAiB,EAAKtI,MAAM2F,SAASnG,QACrCgF,YAAa,EAAKxE,MAAMwE,iBAqBxB,kBAAC,IAAD,CACE0D,OAAK,EACLL,KAAK,aACLC,UAAW,kBACT,kBAAC,EAAD,CACEhF,kBAAmB,EAAK9C,MAAM8C,kBAC9BD,aAAc,EAAK7C,MAAM6C,kBAK/B,kBAAC,IAAD,CAAUvB,GAAG,WAEf,kBAAC,EAAD,W,GAnFW6C,aA8GJoE,cAAWC,mBApBF,SAACzD,GAAD,MAAY,CAClCjD,OAAQiD,EAAMjD,OACd6D,SAAUZ,EAAMY,SAChBsC,WAAYlD,EAAMkD,WAClB/G,QAAS6D,EAAM7D,YAIU,SAACuH,GAAD,MAAe,CACxChB,YAAa,kBAAMgB,GCnDY,SAACA,GAEhC,OADAA,EAhBkC,CAClC/E,KChD4B,mBDgErBgF,MAAMtJ,EAAU,UACpBuJ,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAJ,gBACDH,EAASI,OADR,cACoBJ,EAASK,aAIzC,MAFA5E,QAAQC,IAAIwE,GACZA,EAAMF,SAAWA,EACXE,KAGV,SAACA,GAEC,MADc,IAAIC,MAAMD,EAAMI,YAIjCP,MAAK,SAACC,GAAD,OAAcA,EAASO,UAC5BR,MAAK,SAAC7G,GAAD,OAAY2G,EA5BG,SAAC3G,GAAD,MAAa,CACpC4B,KCvDwB,aDwDxB0F,QAAStH,GA0BoBuH,CAAUvH,OACpCwH,OAAM,SAACR,GAAD,OAAWL,EAlCoB,CACxC/E,KCnD2B,gBDoD3B0F,QAgC0CN,EAAMI,iBD6BhDxB,cAAe,kBAAMe,GCdY,SAACA,GAClC,OAAOC,MAAMtJ,EAAU,YACpBuJ,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAJ,gBACDH,EAASI,OADR,cACoBJ,EAASK,aAIzC,MAFA5E,QAAQC,IAAIwE,GACZA,EAAMF,SAAWA,EACXE,KAGV,SAACA,GAEC,MADc,IAAIC,MAAMD,EAAMI,YAIjCP,MAAK,SAACC,GAAD,OAAcA,EAASO,UAC5BR,MAAK,SAAChD,GAAD,OAAc8C,EA3BG,SAAC9C,GAAD,MAAe,CACxCjC,KCjG0B,eDkG1B0F,QAASzD,GAyBsB4D,CAAY5D,OACxC2D,OAAM,SAACR,GAAD,OAAWL,EAjCsB,CAC1C/E,KC7F6B,kBD8F7B0F,QA+B4CN,EAAMI,iBDPlDvB,YAAa,kBAAMc,GC0BY,SAACA,GAEhC,OADAA,EAhBkC,CAClC/E,KC3H4B,mBD2IrBgF,MAAMtJ,EAAU,cACpBuJ,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAJ,gBACDH,EAASI,OADR,cACoBJ,EAASK,aAIzC,MAFA5E,QAAQC,IAAIwE,GACZA,EAAMF,SAAWA,EACXE,KAGV,SAACA,GAEC,MADc,IAAIC,MAAMD,EAAMI,YAIjCP,MAAK,SAACC,GAAD,OAAcA,EAASO,UAC5BR,MAAK,SAACa,GAAD,OAAYf,EA5BG,SAACe,GAAD,MAAa,CACpC9F,KClIwB,aDmIxB0F,QAASI,GA0BoBC,CAAUD,OACpCF,OAAM,SAACR,GAAD,OAAWL,EAlCoB,CACxC/E,KC9H2B,gBD+H3B0F,QAgC0CN,EAAMI,iBDhDhDtB,aAAc,kBAAMa,GCmEY,SAACA,GAEjC,OADAA,EAhBmC,CACnC/E,KCjK6B,oBDiLtBgF,MAAMtJ,EAAU,WACpBuJ,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAJ,gBACDH,EAASI,OADR,cACoBJ,EAASK,aAIzC,MAFA5E,QAAQC,IAAIwE,GACZA,EAAMF,SAAWA,EACXE,KAGV,SAACA,GAEC,MADc,IAAIC,MAAMD,EAAMI,YAIjCP,MAAK,SAACC,GAAD,OAAcA,EAASO,UAC5BR,MAAK,SAACzH,GAAD,OAAauH,EA5BG,SAACvH,GAAD,MAAc,CACtCwC,KCxKyB,cDyKzB0F,QAASlI,GA0BqBwI,CAAWxI,OACtCoI,OAAM,SAACR,GAAD,OAAWL,EAlCqB,CACzC/E,KCpK4B,iBDqK5B0F,QAgC2CN,EAAMI,iBDzFjDpG,kBAAmB,kBAAM2F,EAASkB,UAAQC,MAAM,cAChDpF,YAAa,SAACC,EAAQC,EAAQC,EAAQC,GAAzB,OACX6D,ECnHuB,SAAChE,EAAQC,EAAQC,EAAQC,GAAzB,OAAqC,SAAC6D,GAC/D,IAAMoB,EAAa,CACjBpF,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,QAASA,GAIX,OAFAiF,EAAWzD,MAAO,IAAID,MAAO2D,cAEtBpB,MAAMtJ,EAAU,WAAY,CACjC2K,OAAQ,OACRhJ,KAAMiJ,KAAKC,UAAUJ,GACrBK,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEZxB,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAJ,gBACDH,EAASI,OADR,cACoBJ,EAASK,aAIzC,MAFA5E,QAAQC,IAAIwE,GACZA,EAAMF,SAAWA,EACXE,KAGV,SAACA,GAEC,MADc,IAAIC,MAAMD,EAAMI,YAIjCP,MAAK,SAACC,GAAD,OAAcA,EAASO,UAC5BR,MAAK,SAACC,GAAD,OAAcH,EA1CE,SAAC7D,GAAD,MAAc,CACtClB,KCJyB,cDKzB0F,QAASxE,GAwCsBwF,CAAWxB,OACvCU,OAAM,SAACR,GAAD,OACLlC,MAAM,4CAA8CkC,EAAMI,aD6EnD1E,CAAYC,EAAQC,EAAQC,EAAQC,KAC/C/B,aAAc,SAACwH,GAAD,OAAc5B,EC0FF,SAAC4B,GAAD,OAAc,SAAC5B,GACzC,IAAM6B,EAAW,eAAQD,GACzB,OACE3B,MAAMtJ,EAAU,WAAY,CAC1B2K,OAAQ,OACRhJ,KAAMiJ,KAAKC,UAAUK,GACrBJ,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEZxB,MAEC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAJ,gBACDH,EAASI,OADR,cACoBJ,EAASK,aAIzC,MAFA5E,QAAQC,IAAIwE,GACZA,EAAMF,SAAWA,EACXE,KAIV,SAACA,GAEC,MADc,IAAIC,MAAMD,EAAMI,YAIjCP,MAAK,SAACC,GAAD,OAAcA,EAASO,UAE5BR,MAAK,SAACC,GAAD,OAAchC,MAAMoD,KAAKC,UAAUrB,OACxCU,OAAM,SAACR,GACNlC,MAAM,gDAAkDkC,EAAMI,aD7H/BrG,CAAawH,QAI1B7B,CAA6ChB,I,iBGhIjE+C,EAAe,CACnBhL,WAAW,EACXC,QAAS,KACTsC,OAAQ,I,QCHJyI,EAAe,CACnB/K,QAAS,KACTmG,SAAU,ICFN4E,EAAe,CACnBhL,WAAW,EACXC,QAAS,KACTyI,WAAY,ICHRsC,EAAe,CACnBhL,WAAW,EACXC,QAAS,KACT0B,QAAS,I,iBCWLsJ,EAAcC,0BAAgB,aAClC3I,OJRoB,WAAmC,IAAlCiD,EAAiC,uDAAzBwF,EAAcG,EAAW,uCACtD,OAAQA,EAAOhH,MACb,IDHsB,aCIpB,OAAO,2BACFqB,GADL,IAEExF,WAAW,EACXC,QAAS,KACTsC,OAAQ4I,EAAOtB,UAGnB,IDb0B,iBCcxB,OAAO,2BAAKrE,GAAZ,IAAmBxF,WAAW,EAAMC,QAAS,KAAMsC,OAAQ,KAE7D,IDfyB,gBCgBvB,OAAO,2BACFiD,GADL,IAEExF,WAAW,EACXC,QAASkL,EAAOtB,QAChBtH,OAAQ,KAEZ,QACE,OAAOiD,IIZXY,SHVsB,WAAmC,IAAlCZ,EAAiC,uDAAzBwF,EAAcG,EAAW,uCACxD,OAAQA,EAAOhH,MACb,IFNwB,eEOtB,OAAO,2BACFqB,GADL,IAEExF,WAAW,EACXC,QAAS,KACTmG,SAAU+E,EAAOtB,UAErB,IFd2B,kBEezB,OAAO,2BACFrE,GADL,IAEExF,WAAW,EACXC,QAASkL,EAAOtB,QAChBzD,SAAU,KAEd,IFvBuB,cEwBrB,IAAIf,EAAU8F,EAAOtB,QACrB,OAAO,2BAAKrE,GAAZ,IAAmBY,SAAS,GAAD,mBAAMZ,EAAMY,UAAZ,CAAsBf,MACnD,QACE,OAAOG,IGTXkD,WFVwB,WAAmC,IAAlClD,EAAiC,uDAAzBwF,EAAcG,EAAW,uCAC1D,OAAQA,EAAOhH,MACb,IHCsB,aGApB,OAAO,2BACFqB,GADL,IAEExF,WAAW,EACXC,QAAS,KACTyI,WAAYyC,EAAOtB,UAGvB,IHT0B,iBGUxB,OAAO,2BAAKrE,GAAZ,IAAmBxF,WAAW,EAAMC,QAAS,KAAMyI,WAAY,KAEjE,IHXyB,gBGYvB,OAAO,2BACFlD,GADL,IAEExF,WAAW,EACXC,QAASkL,EAAOtB,QAChBnB,WAAY,KAEhB,QACE,OAAOlD,IEVX7D,QDXqB,WAAmC,IAAlC6D,EAAiC,uDAAzBwF,EAAcG,EAAW,uCACvD,OAAQA,EAAOhH,MACb,IJKuB,cIJrB,OAAO,2BACFqB,GADL,IAEExF,WAAW,EACXC,QAAS,KACT0B,QAASwJ,EAAOtB,UAEpB,IJJ2B,kBIKzB,OAAO,2BAAKrE,GAAZ,IAAmBxF,WAAW,EAAMC,QAAS,KAAM0B,QAAS,KAE9D,IJN0B,iBIOxB,OAAO,2BACF6D,GADL,IAEExF,WAAW,EACXC,QAASkL,EAAOtB,QAChBlI,QAAS,KAEb,QACE,OAAO6D,KCRR4F,sBAAY,CACbN,SCtB2B,CAC7BO,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAO,EACPC,YAAa,OACb/B,QAAS,QCELgC,EFkBUC,sBACZX,EACAY,kBACEC,0BAAgBC,KAChBC,OAAOC,8BACLD,OAAOC,iCEPAC,E,uKAZX,OACE,kBAAC,WAAD,CAAUP,MAAOA,GACf,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,a,GANM/G,aCCEuH,QACW,cAA7BH,OAAOI,SAASC,UAEe,UAA7BL,OAAOI,SAASC,UAEhBL,OAAOI,SAASC,SAASzD,MACvB,2DCTN0D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzD,MAAK,SAAA0D,GACJA,EAAaC,gBAEdhD,OAAM,SAAAR,GACLzE,QAAQyE,MAAMA,EAAMI,a","file":"static/js/main.e9ce0991.chunk.js","sourcesContent":["import React from 'react';\n// This component displays only a spinner with the message \"Loading\".\nconst Loading = () => {\n  return (\n    <div className=\"col-12\">\n      <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n      <p>Loading . . .</p>\n    </div>\n  );\n};\n\nexport default Loading;\n","export const baseUrl = 'http://localhost:3001/';\n","import React from 'react';\n\n// I used reactstrap for creating card\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  CardSubtitle,\n} from 'reactstrap';\nimport Loading from './Loading';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst RenderCard = ({ item, isLoading, errMess }) => {\n  // Since we are getting data from the server, I am handling with loading and error.\n  if (isLoading) {\n    return <Loading />;\n  } else if (errMess) {\n    return <h4>{errMess}</h4>;\n  } else\n    return (\n      <Card>\n        {/* Since we are getting data(also image here) from the server, I added baseUrl to source */}\n        <CardImg src={baseUrl + item.image} alt={item.name} />\n        <CardBody>\n          <CardTitle>{item.name}</CardTitle>\n          {item.designation ? (\n            <CardSubtitle>{item.designation}</CardSubtitle>\n          ) : null}\n          <CardText>{item.description}</CardText>\n        </CardBody>\n      </Card>\n    );\n};\n\nconst Home = (props) => {\n  return (\n    <div className=\"container\">\n      <div className=\"row align-items-start\">\n        <div className=\"col-12 col-md m-1\">\n          <RenderCard\n            item={props.dish}\n            isLoading={props.dishesLoading}\n            errMess={props.dishesErrMess}\n          />\n        </div>\n        <div className=\"col-12 col-md m-1\">\n          <RenderCard\n            item={props.promotion}\n            isLoading={props.promosLoading}\n            errMess={props.promosErrMess}\n          />\n        </div>\n        <div className=\"col-12 col-md m-1\">\n          <RenderCard\n            item={props.leader}\n            isLoading={props.leadersLoading}\n            errMess={props.leadersErrMess}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Card,\n  CardBody,\n  CardHeader,\n  Media,\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport Loading from './Loading';\n\nconst RenderLeader = (props) => {\n  return (\n    <div className=\"col-12 mt-5\">\n      <Media tag=\"li\">\n        <Media left middle>\n          <Media\n            object\n            src={baseUrl + props.leader.image}\n            alt={props.leader.name}\n          />\n        </Media>\n        <Media body className=\"ml-5\">\n          <Media heading>{props.leader.name}</Media>\n          <p>{props.leader.designation}</p>\n          <p>{props.leader.description}</p>\n        </Media>\n      </Media>\n    </div>\n  );\n};\n\nfunction About(props) {\n  const leaders = props.leaders.leaders.map((leader) => {\n    return <RenderLeader key={leader.id} leader={leader} />;\n  });\n  // Since we are getting data from the server, I am handling with loading and error.\n  if (props.leaders.isLoading) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Loading />\n        </div>\n      </div>\n    );\n  } else if (props.leaders.errMess) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <h4>{props.leaders.errMess}</h4>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/home\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>About Us</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12\">\n            <h3>About Us</h3>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-12 col-md-6\">\n            <h2>Our History</h2>\n            <p>\n              Started in 2010, Ristorante con Fusion quickly established itself\n              as a culinary icon par excellence in Hong Kong. With its unique\n              brand of world fusion cuisine that can be found nowhere else, it\n              enjoys patronage from the A-list clientele in Hong Kong. Featuring\n              four of the best three-star Michelin chefs in the world, you never\n              know what will arrive on your plate the next time you visit us.\n            </p>\n            <p>\n              The restaurant traces its humble beginnings to{' '}\n              <em>The Frying Pan</em>, a successful chain started by our CEO,\n              Mr. Peter Pan, that featured for the first time the world's best\n              cuisines in a pan.\n            </p>\n          </div>\n          <div className=\"col-12 col-md-5\">\n            <Card>\n              <CardHeader className=\"bg-primary text-white\">\n                Facts At a Glance\n              </CardHeader>\n              <CardBody>\n                <dl className=\"row p-1\">\n                  <dt className=\"col-6\">Started</dt>\n                  <dd className=\"col-6\">3 Feb. 2013</dd>\n                  <dt className=\"col-6\">Major Stake Holder</dt>\n                  <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                  <dt className=\"col-6\">Last Year's Turnover</dt>\n                  <dd className=\"col-6\">$1,250,375</dd>\n                  <dt className=\"col-6\">Employees</dt>\n                  <dd className=\"col-6\">40</dd>\n                </dl>\n              </CardBody>\n            </Card>\n          </div>\n          <div className=\"col-12\">\n            <Card>\n              <CardBody className=\"bg-faded\">\n                <blockquote className=\"blockquote\">\n                  <p className=\"mb-0\">\n                    You better cut the pizza in four pieces because I'm not\n                    hungry enough to eat six.\n                  </p>\n                  <footer className=\"blockquote-footer\">\n                    Yogi Berra,\n                    <cite title=\"Source Title\">\n                      The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion\n                      Books, 2014\n                    </cite>\n                  </footer>\n                </blockquote>\n              </CardBody>\n            </Card>\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h2>Corporate Leadership</h2>\n          </div>\n          <div className=\"col-12\">\n            <Media list>{leaders}</Media>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React from 'react';\nimport {\n  Card,\n  CardImg,\n  CardImgOverlay,\n  CardTitle,\n  Breadcrumb,\n  BreadcrumbItem,\n} from 'reactstrap';\n// We need \"Link\" here for dynamic routing\nimport { Link } from 'react-router-dom';\nimport Loading from './Loading';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderMenuItem({ dish }) {\n  return (\n    <Card>\n      {/* again dynamic routing */}\n      <Link to={`/menu/${dish.id}`}>\n        {/* Since we are getting data(also image here) from the server, I added baseUrl to source */}\n        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n        <CardImgOverlay>\n          <CardTitle>{dish.name}</CardTitle>\n        </CardImgOverlay>\n      </Link>\n    </Card>\n  );\n}\n\nconst Menu = (props) => {\n  const menu = props.dishes.dishes.map((dish) => {\n    return (\n      <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n        <RenderMenuItem dish={dish} />\n      </div>\n    );\n  });\n  // Since we are getting data from the server, I am handling with loading and error.\n  if (props.dishes.isLoading) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Loading />\n        </div>\n      </div>\n    );\n  } else if (props.dishes.errMess) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <h4>{props.dishes.errMess}</h4>\n        </div>\n      </div>\n    );\n  } else\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/home\">Home </Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Menu</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12\">\n            <h3>Menu</h3>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">{menu}</div>\n      </div>\n    );\n};\n\nexport default Menu;\n","import React, { Component } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Label,\n  Col,\n  Row,\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\n// Instead of using \"LocalForm\", this time \"Form\" was used to persist the data in the input field even if we leave the page\nimport { Control, Form, Errors } from 'react-redux-form';\n\n//Functions for form validation\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) =>\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n  handleSubmit = (values) => {\n    //We are saving Feedback in the server and then displaying in the alert box.\n    this.props.postFeedback(values);\n    // We empty the input fields.\n    this.props.resetFeedbackForm();\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/home\">Home </Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12\">\n            <h3>Contact Us</h3>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h3>Location Information</h3>\n          </div>\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\n            <h5>Our Address</h5>\n            <address>\n              121, Clear Water Bay Road\n              <br />\n              Clear Water Bay, Kowloon\n              <br />\n              HONG KONG\n              <br />\n              <i className=\"fa fa-phone\"></i> : +852 1234 5678\n              <br />\n              <i className=\"fa fa-fax\"></i> : +852 8765 4321\n              <br />\n              <i className=\"fa fa-envelope\"></i> :{' '}\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n            </address>\n          </div>\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\n            <h5>Map of our Location</h5>\n          </div>\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\n            <div className=\"btn-group\" role=\"group\">\n              <a\n                role=\"button\"\n                className=\"btn btn-primary\"\n                href=\"tel:+85212345678\"\n              >\n                <i className=\"fa fa-phone\"></i> Call\n              </a>\n              <a role=\"button\" className=\"btn btn-info\" href=\"tel:+85212345678\">\n                <i className=\"fa fa-skype\"></i> Skype\n              </a>\n              <a\n                role=\"button\"\n                className=\"btn btn-success\"\n                href=\"mailto:confusion@food.net\"\n              >\n                <i className=\"fa fa-envelope-o\"></i> Email\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h3>Send us Your Feedback</h3>\n          </div>\n          <div className=\"col-12 col-md-9\">\n            <Form\n              model=\"feedback\"\n              onSubmit={(values) => this.handleSubmit(values)}\n            >\n              <Row className=\"form-group\">\n                <Label htmlFor=\"firstname\" md={2}>\n                  First Name\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".firstname\"\n                    id=\"firstname\"\n                    name=\"firstname\"\n                    placeholder=\"First Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".firstname\"\n                    show=\"touched\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be greater than 2 characters',\n                      maxLength: 'Must be 15 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"lastname\" md={2}>\n                  Last Name\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".lastname\"\n                    id=\"lastname\"\n                    name=\"lastname\"\n                    placeholder=\"Last Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".lastname\"\n                    show=\"touched\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be greater than 2 characters',\n                      maxLength: 'Must be 15 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"telnum\" md={2}>\n                  Contact Tel.\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".telnum\"\n                    id=\"telnum\"\n                    name=\"telnum\"\n                    placeholder=\"Tel. Number\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15),\n                      isNumber,\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".telnum\"\n                    show=\"touched\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be greater than 2 numbers',\n                      maxLength: 'Must be 15 numbers or less',\n                      isNumber: 'Must be a number',\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>\n                  Email\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".email\"\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      validEmail,\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".email\"\n                    show=\"touched\"\n                    messages={{\n                      required: 'Required',\n                      validEmail: 'Invalid Email Address',\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 6, offset: 2 }}>\n                  <div className=\"form-check\">\n                    <Label check>\n                      <Control.checkbox\n                        model=\".agree\"\n                        type=\"checkbox\"\n                        name=\"agree\"\n                        className=\"form-check-input\"\n                      />{' '}\n                      <strong>May we contact you?</strong>\n                    </Label>\n                  </div>\n                </Col>\n                <Col md={{ size: 3, offset: 1 }}>\n                  <Control.select\n                    model=\".contactType\"\n                    type=\"select\"\n                    name=\"contactType\"\n                    className=\"form-control\"\n                  >\n                    <option>Tel.</option>\n                    <option>Email</option>\n                  </Control.select>\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"message\" md={2}>\n                  Your Feedback\n                </Label>\n                <Col md={10}>\n                  <Control.textarea\n                    model=\".message\"\n                    type=\"textarea\"\n                    id=\"message\"\n                    name=\"message\"\n                    rows=\"12\"\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Send Feedback\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport {\n  Card,\n  CardImg,\n  CardBody,\n  CardText,\n  CardTitle,\n  Breadcrumb,\n  BreadcrumbItem,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  Button,\n  Label,\n  Row,\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport Loading from './Loading';\nimport { baseUrl } from '../shared/baseUrl';\n\n// Some validation functions for form fields\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\n\n// In this component I used local component state instead of Redux store. Redux store does not need this state.\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isModalOpen: false };\n  }\n\n  handleSubmit = (values) => {\n    console.log(values);\n    this.toggleModal();\n    // We are firstly saving in the server, then in store, the we are displaying.\n    this.props.postComment(\n      this.props.dishId,\n      values.rating,\n      values.author,\n      values.comment\n    );\n  };\n\n  // function just to open and close the model\n  toggleModal = () => {\n    this.setState({ isModalOpen: !this.state.isModalOpen });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Button outline onClick={this.toggleModal}>\n          <span className=\"fa fa-pencil fa-md\"> Submit Comment</span>\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody style={{ margin: 10 }}>\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"rating\">Rating</Label>\n                <Control.select\n                  model=\".rating\"\n                  type=\"select\"\n                  name=\"rating\"\n                  className=\"form-control\"\n                >\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                  <option>4</option>\n                  <option>5</option>\n                </Control.select>\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"author\">Your Name</Label>\n                <Control.text\n                  model=\".author\"\n                  id=\"author\"\n                  name=\"author\"\n                  placeholder=\"Your Name\"\n                  className=\"form-control\"\n                  validators={{\n                    required,\n                    minLength: minLength(3),\n                    maxLength: maxLength(15),\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".author\"\n                  show=\"touched\"\n                  messages={{\n                    required: 'Required',\n                    minLength: 'Must be greater than 2 characters',\n                    maxLength: 'Must be 15 characters or less',\n                  }}\n                />\n              </Row>\n\n              <Row className=\"form-group\">\n                <Label htmlFor=\"comment\">Comment</Label>\n                <Control.textarea\n                  model=\".comment\"\n                  type=\"textarea\"\n                  id=\"comment\"\n                  name=\"comment\"\n                  rows=\"8\"\n                  className=\"form-control\"\n                />\n              </Row>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Submit\n              </Button>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction RenderDish({ dish }) {\n  if (dish != null) {\n    return (\n      <div className=\"col-12 col-md-5 m-1\">\n        <Card>\n          <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n          <CardBody>\n            <CardTitle>{dish.name}</CardTitle>\n            <CardText>{dish.description}</CardText>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nfunction RenderComments({ comments, postComment, dishId }) {\n  if (comments == null) {\n    return <div></div>;\n  }\n  const cmnts = comments.map((comment) => {\n    return (\n      <li key={comment.id}>\n        <p>{comment.comment}</p>\n        <p>\n          -- {comment.author}, &nbsp;\n          {new Intl.DateTimeFormat('en-US', {\n            year: 'numeric',\n            month: 'long',\n            day: '2-digit',\n          }).format(new Date(comment.date))}\n        </p>\n      </li>\n    );\n  });\n  return (\n    <div className=\"col-12 col-md-5 m-1\">\n      <h4> Comments </h4>\n      <ul className=\"list-unstyled\">{cmnts}</ul>\n      <CommentForm dishId={dishId} postComment={postComment} />\n    </div>\n  );\n}\n// Since we are getting data from the server, I am handling with loading and error.\nconst DishDetail = (props) => {\n  if (props.isLoading) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Loading />\n        </div>\n      </div>\n    );\n  } else if (props.errMess) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <h4>{props.errMess}</h4>\n        </div>\n      </div>\n    );\n  } else if (props.dish != null) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/menu\">Menu </Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12\">\n            <h3>{props.dish.name}</h3>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          <RenderDish dish={props.dish} />\n          <RenderComments\n            comments={props.comments}\n            // We passing down also post comment method.\n            postComment={props.postComment}\n            dishId={props.dish.id}\n          />\n        </div>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n\nexport default DishDetail;\n","import React, { Component } from 'react';\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavbarToggler,\n  Collapse,\n  NavItem,\n  Jumbotron,\n  Modal,\n  Button,\n  ModalBody,\n  ModalHeader,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    //Again I used local component state instead of Redux store to handle modal and burger menu.\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false,\n    };\n  }\n\n  toggleNav = () => {\n    this.setState({ isNavOpen: !this.state.isNavOpen });\n  };\n\n  toggleModal = () => {\n    this.setState({ isModalOpen: !this.state.isModalOpen });\n  };\n\n  handleLogin = (e) => {\n    e.preventDefault();\n    this.toggleModal();\n    alert(\n      `Username: ${this.username.value} Password: ${this.password.value} Remember: ${this.remember.checked}`\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {/* expand attribute is needed */}\n        <Navbar dark expand=\"md\">\n          <div className=\"container\">\n            {/* NavbarToggler is burger menu symbol */}\n            <NavbarToggler onClick={this.toggleNav} />\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\n              <img\n                // I get logo image from project folder itself not from the server.\n                src=\"assets/images/logo.png\"\n                height=\"30\"\n                width=\"41\"\n                alt=\"Ristorante Con Fusion\"\n              />\n            </NavbarBrand>\n            {/* isOpen and navbar attributes are needed */}\n            <Collapse isOpen={this.state.isNavOpen} navbar>\n              <Nav navbar>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/home\">\n                    <span className=\"fa fa-home fa-lg\"> Home</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/aboutus\">\n                    <span className=\"fa fa-info fa-lg\"> About Us</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/menu\">\n                    <span className=\"fa fa-list fa-lg\"> Menu</span>\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/contactus\">\n                    <span className=\"fa fa-address-card fa-lg\">\n                      {' '}\n                      Contact Us\n                    </span>\n                  </NavLink>\n                </NavItem>\n              </Nav>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                  </Button>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n        <Jumbotron>\n          <div className=\"container\">\n            <div className=\"row row-header\">\n              <div className=\"col-12 col-sm-6\">\n                <h1>Ristorante Con Fusion</h1>\n                <p>\n                  We take inspiration from the World's best cuisines, and create\n                  a unique fusion experience. Our lipsmacking creations will\n                  tickle your culinary senses!\n                </p>\n              </div>\n            </div>\n          </div>\n        </Jumbotron>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n          <ModalBody>\n            {/* Uncontrolled form */}\n            <Form onSubmit={this.handleLogin}>\n              <FormGroup>\n                <Label htmlFor=\"username\">Username</Label>\n                <Input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  innerRef={(input) => (this.username = input)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  innerRef={(input) => (this.password = input)}\n                />\n              </FormGroup>\n              <FormGroup check>\n                <Label check>\n                  <Input\n                    type=\"checkbox\"\n                    name=\"remember\"\n                    innerRef={(input) => (this.remember = input)}\n                  />{' '}\n                  Remember me\n                </Label>\n              </FormGroup>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Login\n              </Button>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Footer = (props) => {\n  return (\n    <div className=\"footer\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-4 offset-1 col-sm-2\">\n            <h5>Links</h5>\n            <ul className=\"list-unstyled\">\n              <li>\n                <Link to=\"/home\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/aboutus\">About Us</Link>\n              </li>\n              <li>\n                <Link to=\"/menu\">Menu</Link>\n              </li>\n              <li>\n                <Link to=\"/contactus\">Contact Us</Link>\n              </li>\n            </ul>\n          </div>\n          <div className=\"col-7 col-sm-5\">\n            <h5>Our Address</h5>\n            <address>\n              121, Clear Water Bay Road\n              <br />\n              Clear Water Bay, Kowloon\n              <br />\n              HONG KONG\n              <br />\n              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678\n              <br />\n              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321\n              <br />\n              <i className=\"fa fa-envelope fa-lg\"></i>:{' '}\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n            </address>\n          </div>\n          <div className=\"col-12 col-sm-4 align-self-center mt-2\">\n            <div className=\"text-center\">\n              <a\n                className=\"btn btn-social-icon btn-google mr-1\"\n                href=\"http://google.com/+\"\n              >\n                <i className=\"fa fa-google-plus\"></i>\n              </a>\n              <a\n                className=\"btn btn-social-icon btn-facebook mr-1\"\n                href=\"http://www.facebook.com/profile.php?id=\"\n              >\n                <i className=\"fa fa-facebook\"></i>\n              </a>\n              <a\n                className=\"btn btn-social-icon btn-linkedin mr-1\"\n                href=\"http://www.linkedin.com/in/\"\n              >\n                <i className=\"fa fa-linkedin\"></i>\n              </a>\n              <a\n                className=\"btn btn-social-icon btn-twitter mr-1\"\n                href=\"http://twitter.com/\"\n              >\n                <i className=\"fa fa-twitter\"></i>\n              </a>\n              <a\n                className=\"btn btn-social-icon btn-google mr-1\"\n                href=\"http://youtube.com/\"\n              >\n                <i className=\"fa fa-youtube\"></i>\n              </a>\n              <a className=\"btn btn-social-icon mr-1\" href=\"mailto:\">\n                <i className=\"fa fa-envelope-o\"></i>\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-auto mt-2\">\n            <p>© Copyright 2018 Ristorante Con Fusion</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport Home from './Home';\nimport About from './About';\nimport Menu from './Menu';\nimport Contact from './Contact';\nimport DishDetail from './DishDetail';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  postComment,\n  fetchDishes,\n  fetchComments,\n  fetchPromos,\n  fetchLeaders,\n  postFeedback,\n} from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\n\nclass Main extends Component {\n  componentDidMount() {\n    // We are getting data from server after the component mounted\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n  render() {\n    const HomePage = () => {\n      return (\n        <Home\n          //props related to dishes\n          dishesLoading={this.props.dishes.isLoading}\n          dishesErrMess={this.props.dishes.errMess}\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n          //props related to promotions\n          promosLoading={this.props.promotions.isLoading}\n          promosErrMess={this.props.promotions.errMess}\n          promotion={\n            this.props.promotions.promotions.filter(\n              (promotion) => promotion.featured\n            )[0]\n          }\n          //props related to leaders\n          leadersLoading={this.props.leaders.isLoading}\n          leadersErrMess={this.props.leaders.errMess}\n          leader={\n            this.props.leaders.leaders.filter((leader) => leader.featured)[0]\n          }\n        />\n      );\n    };\n\n    const DishWithId = ({ match }) => {\n      return (\n        <DishDetail\n          dish={\n            this.props.dishes.dishes.filter(\n              (dish) => dish.id === parseInt(match.params.dishId, 10)\n            )[0]\n          }\n          isLoading={this.props.dishes.isLoading}\n          errMess={this.props.dishes.errMess}\n          comments={this.props.comments.comments.filter(\n            (comment) => comment.dishId === parseInt(match.params.dishId, 10)\n          )}\n          commentsErrMess={this.props.comments.errMess}\n          postComment={this.props.postComment}\n        />\n      );\n    };\n\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route path=\"/home\" component={HomePage} />\n          <Route\n            path=\"/aboutus\"\n            component={() => <About leaders={this.props.leaders} />}\n          />\n          <Route\n            exact\n            path=\"/menu\"\n            component={() => <Menu dishes={this.props.dishes} />}\n          />\n          {/* Dynamic routing */}\n          <Route path=\"/menu/:dishId\" component={DishWithId} />\n          <Route\n            exact\n            path=\"/contactus\"\n            component={() => (\n              <Contact\n                resetFeedbackForm={this.props.resetFeedbackForm}\n                postFeedback={this.props.postFeedback}\n              />\n            )}\n          />\n          {/* Instead of using \"path\" without value, we used \"Redirect\". */}\n          <Redirect to=\"/home\" />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\n// We are getting all state to this main component, then sending them down to child components via props.\nconst mapStateToProps = (state) => ({\n  dishes: state.dishes,\n  comments: state.comments,\n  promotions: state.promotions,\n  leaders: state.leaders,\n});\n\n// We are also defining all methods here in this component and then sending them down to the related child component.\nconst mapDispatchToProps = (dispatch) => ({\n  fetchDishes: () => dispatch(fetchDishes()),\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos()),\n  fetchLeaders: () => dispatch(fetchLeaders()),\n  resetFeedbackForm: () => dispatch(actions.reset('feedback')),\n  postComment: (dishId, rating, author, comment) =>\n    dispatch(postComment(dishId, rating, author, comment)),\n  postFeedback: (feedback) => dispatch(postFeedback(feedback)),\n});\n\n//If we use Router, then we need to import and use 'withRouter'(from react-router-dom) in addition to \"connect\"\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n//Action creator for submitting your own comment to the dish\nexport const addComment = (comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment,\n});\n\n//Thunk for posting comment\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n  const newComment = {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment,\n  };\n  newComment.date = new Date().toISOString();\n\n  return fetch(baseUrl + 'comments', {\n    method: 'POST',\n    body: JSON.stringify(newComment),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    credentials: 'same-origin',\n  })\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          let error = new Error(\n            `Error ${response.status} : ${response.statusText}`\n          );\n          console.log(error);\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        let errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((response) => response.json())\n    .then((response) => dispatch(addComment(response)))\n    .catch((error) =>\n      alert('Your comment could not be posted\\nError: ' + error.message)\n    );\n};\n\n//Action creators for dishes\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING,\n});\n\nexport const dishesFailed = (errmess) => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess,\n});\n\nexport const addDishes = (dishes) => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes,\n});\n\n//Thunk for fetching dishes\nexport const fetchDishes = () => (dispatch) => {\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + 'dishes')\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          let error = new Error(\n            `Error ${response.status} : ${response.statusText}`\n          );\n          console.log(error);\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        let errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((response) => response.json())\n    .then((dishes) => dispatch(addDishes(dishes)))\n    .catch((error) => dispatch(dishesFailed(error.message)));\n};\n\n//Action creators for comments\nexport const commentsFailed = (errmess) => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess,\n});\n\nexport const addComments = (comments) => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments,\n});\n\n//Thunk for fetching comments\nexport const fetchComments = () => (dispatch) => {\n  return fetch(baseUrl + 'comments')\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          let error = new Error(\n            `Error ${response.status} : ${response.statusText}`\n          );\n          console.log(error);\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        let errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((response) => response.json())\n    .then((comments) => dispatch(addComments(comments)))\n    .catch((error) => dispatch(commentsFailed(error.message)));\n};\n\n//Action creators for promotions\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING,\n});\n\nexport const promosFailed = (errmess) => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess,\n});\n\nexport const addPromos = (promos) => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos,\n});\n\n//Thunk for fetching promotions\nexport const fetchPromos = () => (dispatch) => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + 'promotions')\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          let error = new Error(\n            `Error ${response.status} : ${response.statusText}`\n          );\n          console.log(error);\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        let errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((response) => response.json())\n    .then((promos) => dispatch(addPromos(promos)))\n    .catch((error) => dispatch(promosFailed(error.message)));\n};\n\n//Action creators for leaders\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING,\n});\n\nexport const leadersFailed = (errmess) => ({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: errmess,\n});\n\nexport const addLeaders = (leaders) => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: leaders,\n});\n\n//Thunk for fetching leaders\nexport const fetchLeaders = () => (dispatch) => {\n  dispatch(leadersLoading(true));\n  return fetch(baseUrl + 'leaders')\n    .then(\n      (response) => {\n        if (response.ok) {\n          return response;\n        } else {\n          let error = new Error(\n            `Error ${response.status} : ${response.statusText}`\n          );\n          console.log(error);\n          error.response = response;\n          throw error;\n        }\n      },\n      (error) => {\n        let errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then((response) => response.json())\n    .then((leaders) => dispatch(addLeaders(leaders)))\n    .catch((error) => dispatch(leadersFailed(error.message)));\n};\n\n// Thunk for posting feedback\nexport const postFeedback = (feedback) => (dispatch) => {\n  const newFeedback = { ...feedback };\n  return (\n    fetch(baseUrl + 'feedback', {\n      method: 'POST',\n      body: JSON.stringify(newFeedback),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      credentials: 'same-origin',\n    })\n      .then(\n        // We are handling error based on the response from the server.\n        (response) => {\n          if (response.ok) {\n            return response;\n          } else {\n            let error = new Error(\n              `Error ${response.status} : ${response.statusText}`\n            );\n            console.log(error);\n            error.response = response;\n            throw error;\n          }\n        },\n        // We are handling error, when there is no response from the server.\n        (error) => {\n          let errmess = new Error(error.message);\n          throw errmess;\n        }\n      )\n      .then((response) => response.json())\n      // We are displaying form values in the alert box, after saving it to the server.\n      .then((response) => alert(JSON.stringify(response)))\n      .catch((error) => {\n        alert('Your Feedback could not be submitted\\nError: ' + error.message);\n      })\n  );\n};\n","//For adding your own comment\nexport const ADD_COMMENT = 'ADD_COMMENT';\n//For comments\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\n//For dishes\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\n// For promotions\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const ADD_PROMOS = 'ADD_PROMOS';\n//For leaders\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\nexport const ADD_LEADERS = 'ADD_LEADERS';\n","import * as ActionTypes from './ActionTypes';\n\nconst initialState = {\n  isLoading: true,\n  errMess: null,\n  dishes: [],\n};\n\n//Dishes reducer\nexport const Dishes = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_DISHES:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: null,\n        dishes: action.payload,\n      };\n\n    case ActionTypes.DISHES_LOADING:\n      return { ...state, isLoading: true, errMess: null, dishes: [] };\n\n    case ActionTypes.DISHES_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: action.payload,\n        dishes: [],\n      };\n    default:\n      return state;\n  }\n};\n","import * as ActionTypes from './ActionTypes';\n\nconst initialState = {\n  errMess: null,\n  comments: [],\n};\n\n// Comments reducer\nexport const Comments = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: null,\n        comments: action.payload,\n      };\n    case ActionTypes.COMMENTS_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: action.payload,\n        comments: [],\n      };\n    case ActionTypes.ADD_COMMENT:\n      let comment = action.payload;\n      return { ...state, comments: [...state.comments, comment] };\n    default:\n      return state;\n  }\n};\n","import * as ActionTypes from './ActionTypes';\n\nconst initialState = {\n  isLoading: true,\n  errMess: null,\n  promotions: [],\n};\n\n//Promotions reducer\nexport const Promotions = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_PROMOS:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: null,\n        promotions: action.payload,\n      };\n\n    case ActionTypes.PROMOS_LOADING:\n      return { ...state, isLoading: true, errMess: null, promotions: [] };\n\n    case ActionTypes.PROMOS_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: action.payload,\n        promotions: [],\n      };\n    default:\n      return state;\n  }\n};\n","import * as ActionTypes from './ActionTypes';\n\nconst initialState = {\n  isLoading: true,\n  errMess: null,\n  leaders: [],\n};\n\n//Leaders reducer\nexport const Leaders = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_LEADERS:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: null,\n        leaders: action.payload,\n      };\n    case ActionTypes.LEADERS_LOADING:\n      return { ...state, isLoading: true, errMess: null, leaders: [] };\n\n    case ActionTypes.LEADERS_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        errMess: action.payload,\n        leaders: [],\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\n// For react-redux-form\nimport { createForms } from 'react-redux-form';\n\n// we are importing all reducers\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\n\n// For fetching and posting we need thunk\nimport thunk from 'redux-thunk';\n\n// again for react-redux-form\nimport { initialFeedback } from './forms';\n\nconst rootReducer = combineReducers({\n  dishes: Dishes,\n  comments: Comments,\n  promotions: Promotions,\n  leaders: Leaders,\n  ...createForms({\n    feedback: initialFeedback,\n  }),\n});\n\nexport const ConfigureStore = () => {\n  const store = createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(thunk),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n  return store;\n};\n","export const initialFeedback = {\n  firstname: '',\n  lastname: '',\n  telnum: '',\n  email: '',\n  agree: false,\n  contactType: 'Tel.',\n  message: '',\n};\n","import React, { Component } from 'react';\nimport Main from './components/Main';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// Import configureStore function. Another implementation to create and configure store\nimport { ConfigureStore } from './redux/configureStore';\n\n//we assign the returned value of the function to the \"store\" variable\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}